!!!
%html
  %head
    %link(rel="icon" type="image/png" href="favicon.png")
    %link(rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=PT+Sans:400,700,400italic")
    %link(rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=PT+Sans+Caption:400,700")
    %link(rel="stylesheet" type="text/css" href="style.css")
    %link(rel="stylesheet" type="text/css" href="easybox/easybox.min.css")
    %script(type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js")
    %script(type="text/javascript" src="easybox/jquery.mousewheel.min.js")
    %script(type="text/javascript" src="easybox/easybox.min.js")
    %script(type="text/javascript" src="easybox/script.js")
    %title GK2.sk
  %body

    .box
      %img#logo(src="logo.png")
      %img#logo_text(src="logo_text.png")
      %p.title software, hardware and electronics hacking
      %ul
        %li.email
          email:
          %a(href="mailto:stick@gk2.sk") stick@gk2.sk
        %li.jabber
          jabber:
          %a(href="xmpp:stick@gk2.sk") stick@gk2.sk
        %li.phone
          phone: (+420) 22595&times;34396
      %p.desc Need help with an interesting software, hardware or electronics project? Don't hesitate to contact me!
      %ul
        %li.blog
          %a(href="http://stick.gk2.sk/") blog
        %li.twitter
          %a(href="http://www.twitter.com/pavolrusnak") twitter
        %li.cv
          %a(href="http://gk2.sk/cv/") resume
      %p#scrollinfo scroll right to see the selected works &rArr;

    .box
      %h2 ARMap Sandbox
      %p Interactive Augmented Reality Mapping Sandbox. Kinect reads the height map of the world created from sand, computer translates height into color, which is then projected on sand surface via a digital projector.
      - (0..4).each do |i|
        %a(href="images/armap#{i}.jpg" rel="lightbox-armap")<
          %img.thumb(src="images/armap#{i}.png")
      %a(href="http://www.youtube.com/watch?v=OjuHr8QgUP0" rel="lightbox-armap")<
        %img.thumb(src="images/armap5.png")
      %p Originally a collaboration with Tomas Mudrunka, based on the work by Oliver Kreylos. Now powered by a custom lightweight open-source software capable of running on embedded devices like Raspberry Pi or Beagleboard.
      %ul
        %li
          %a(href="http://idav.ucdavis.edu/~okreylos/ResDev/SARndbox/") SARndbox by Oliver Kreylos
        %li
          %a(href="http://blog.harvie.cz/") Tomas Mudrunka

    .box
      %h2 Mirrsaic - NOW
      %p A collaboration with Prokop Bartonicek. My responsibility was to create a software capable of visualizing the scene with sun rays and mirror reflections and calculation of custom-cut mirror shapes and calibration pattern.
      %a(href="http://vimeo.com/50501685" rel="lightbox-mirrsaic")<
        %img.thumb(src="images/mirrsaic0.png")
      - (1..9).each do |i|
        %a(href="images/mirrsaic#{i}.jpg" rel="lightbox-mirrsaic")<
          %img.thumb(src="images/mirrsaic#{i}.png")
      %p.desc In an urban scene we can see solar reflections of geometric forms. Abstract composition described by the sun is approaching from above towards the ground. After several hours, the shapes overlap, thus creating a powerful light cluster, which is changing very fast in an interlocking inscription. Individual light fragments at the moment of encounter rendering the word "NOW" which accurately captures the transience of the moment.
      %p.desc Today, the availability of efficient design and lighting technologies, mapping and generative art is often oblivious to the basic rules of light, time and space. I decided to create a impressive public space light installation that would work within the elementary principles. Mirrsaic, as a process and a tool was programmed, generated and manufactured using the most modern techniques and technologies, which are not directly seen by the viewer. The most complicated project tool is hidden; it remains just a wall, a daylight system and several mirrors in the exact shape, the exact place at the exact time.
      %ul
        %li
          %a(href="http://www.prokopbartonicek.com/?page_id=564") Prokop Bartonicek's site

    .box
      %h2 Potbox
      %p Interactive videofeedback VJing software. Camera is pointed to the computer screen and its picture is modified by custom made visual filters to create breathtaking visuals.
      - (0..9).each do |i|
        %a(href="images/potbox#{i}.jpg" rel="lightbox-potbox")<
          %img.thumb(src="images/potbox#{i}.png")
      %p The project uses OpenCV for retrieving camera stream, which is later rendered using OpenGL and advanced pixel-shader. The behaviour of this pixel shader is controlled by an attached MIDI controller, which together with movable camera provides an easy and intuitive way how to interact with the complex chaotic visual system. Audio can be also used to changed the filter parameters resulting in visuals that react to volume and/or frequency of recorded sound.
